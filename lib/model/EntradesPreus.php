<?php

require 'lib/model/om/BaseEntradesPreus.php';


/**
 * Skeleton subclass for representing a row from the 'entrades_preus' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 11/03/11 11:52:23
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class EntradesPreus extends BaseEntradesPreus {


	/**
	 * Initializes internal state of EntradesPreus object.
	 * @see        parent::__construct()
	 */
	public function __construct()
	{
		// Make sure that parent constructor is always invoked, since that
		// is where any default values for this object are set.
		parent::__construct();
	}

    public function getDescomptesArrayStrings()
    {
        $RET = array();
        foreach(explode('@',$this->getDescomptes()) as $idT):
            $OT = TipusPeer::retrieveByPK($idT);
            if($OT instanceof Tipus) $RET[$idT] = $OT->getTipusDesc();            
        endforeach;
        
        return $RET;            
    }

    public function getDescomptesArray()
    {
        return explode('@',$this->getDescomptes());                
    }

    public function setDescomptesString($array)
    {
        $this->setDescomptes(implode("@",$array));
    }


    public function countEntradesVenudes(){
        $C = new Criteria();
        $C->add(EntradesReservaPeer::ENTRADES_PREUS_HORARI_ID, $this->getHorariid());
        $C->add(EntradesReservaPeer::ENTRADES_PREUS_ACTIVITAT_ID, $this->getActivitatid());
        $C->add(EntradesReservaPeer::ESTAT, EntradesReservaPeer::ESTAT_ENTRADA_CONFIRMADA);
        $C->add(EntradesReservaPeer::ACTIU, true);
        $RES = 0;
        
        foreach(EntradesReservaPeer::doSelect($C) as $OER) $RES += $OER->getQuantitat();
                
        return $RES;
    }
    
    /**
     * Ens indica si en una entrada determinada ja estan les reserves exhaurides
     * */
    public function getIsPle(){        
        return ($this->countEntradesVenudes() >= $this->getPlaces()); 
    }

    public function getActivitat(){        
        return ActivitatsPeer::retrieveByPK($this->getActivitatId());
    }

    public function getHorari(){        
        return HorarisPeer::retrieveByPK($this->getHorariId());
    }    


} // EntradesPreus
