<?php


/**
 * This class defines the structure of the 'usuaris' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 06/04/10 12:54:38
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class UsuarisTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.UsuarisTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('usuaris');
		$this->setPhpName('Usuaris');
		$this->setClassname('Usuaris');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('USUARIID', 'Usuariid', 'INTEGER', true, 11, null);
		$this->addForeignKey('NIVELLS_IDNIVELLS', 'NivellsIdnivells', 'INTEGER', 'nivells', 'IDNIVELLS', false, 11, null);
		$this->addColumn('DNI', 'Dni', 'VARCHAR', false, 12, null);
		$this->addColumn('PASSWD', 'Passwd', 'VARCHAR', false, 20, null);
		$this->addColumn('NOM', 'Nom', 'VARCHAR', false, 30, null);
		$this->addColumn('COG1', 'Cog1', 'VARCHAR', false, 30, null);
		$this->addColumn('COG2', 'Cog2', 'VARCHAR', false, 30, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 30, null);
		$this->addColumn('ADRECA', 'Adreca', 'LONGVARCHAR', false, null, null);
		$this->addColumn('CODIPOSTAL', 'Codipostal', 'INTEGER', false, 11, null);
		$this->addForeignKey('POBLACIO', 'Poblacio', 'INTEGER', 'poblacions', 'IDPOBLACIO', false, 11, null);
		$this->addColumn('POBLACIOTEXT', 'Poblaciotext', 'LONGVARCHAR', false, null, null);
		$this->addColumn('TELEFON', 'Telefon', 'LONGVARCHAR', false, null, null);
		$this->addColumn('MOBIL', 'Mobil', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ENTITAT', 'Entitat', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HABILITAT', 'Habilitat', 'TINYINT', false, 4, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Nivells', 'Nivells', RelationMap::MANY_TO_ONE, array('Nivells_idNivells' => 'idNivells', ), 'SET NULL', 'SET NULL');
    $this->addRelation('Poblacions', 'Poblacions', RelationMap::MANY_TO_ONE, array('Poblacio' => 'idPoblacio', ), 'SET NULL', 'SET NULL');
    $this->addRelation('AppDocumentsPermisos', 'AppDocumentsPermisos', RelationMap::ONE_TO_MANY, array('UsuariID' => 'idUsuari', ), 'CASCADE', 'CASCADE');
    $this->addRelation('AppDocumentsPermisosDir', 'AppDocumentsPermisosDir', RelationMap::ONE_TO_MANY, array('UsuariID' => 'idUsuari', ), 'CASCADE', 'CASCADE');
    $this->addRelation('Cessio', 'Cessio', RelationMap::ONE_TO_MANY, array('UsuariID' => 'usuari_id', ), 'CASCADE', 'CASCADE');
    $this->addRelation('Factures', 'Factures', RelationMap::ONE_TO_MANY, array('UsuariID' => 'ValidaUsuari', ), 'CASCADE', 'CASCADE');
    $this->addRelation('IncidenciesRelatedByQuiinforma', 'Incidencies', RelationMap::ONE_TO_MANY, array('UsuariID' => 'quiinforma', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('IncidenciesRelatedByQuiresol', 'Incidencies', RelationMap::ONE_TO_MANY, array('UsuariID' => 'quiresol', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Matricules', 'Matricules', RelationMap::ONE_TO_MANY, array('UsuariID' => 'Usuaris_UsuariID', ), 'CASCADE', 'CASCADE');
    $this->addRelation('Missatges', 'Missatges', RelationMap::ONE_TO_MANY, array('UsuariID' => 'Usuaris_UsuariID', ), 'CASCADE', 'CASCADE');
    $this->addRelation('Reservaespais', 'Reservaespais', RelationMap::ONE_TO_MANY, array('UsuariID' => 'Usuaris_usuariID', ), 'CASCADE', 'CASCADE');
    $this->addRelation('TasquesRelatedByQuimana', 'Tasques', RelationMap::ONE_TO_MANY, array('UsuariID' => 'QuiMana', ), 'CASCADE', 'CASCADE');
    $this->addRelation('TasquesRelatedByQuifa', 'Tasques', RelationMap::ONE_TO_MANY, array('UsuariID' => 'QuiFa', ), 'CASCADE', 'CASCADE');
    $this->addRelation('UsuarisApps', 'UsuarisApps', RelationMap::ONE_TO_MANY, array('UsuariID' => 'usuari_id', ), 'CASCADE', 'CASCADE');
    $this->addRelation('Usuarisllistes', 'Usuarisllistes', RelationMap::ONE_TO_MANY, array('UsuariID' => 'Usuaris_UsuarisID', ), 'CASCADE', 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // UsuarisTableMap
